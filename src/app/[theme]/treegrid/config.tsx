export const TreeGridSampleOrder: Object = [
    { 'path': 'treegrid/treegrid-overview', 'component': 'Overview', 'name': 'Overview', 'description':'This React Tree Grid example demonstrates the overview in React Tree Grid Component. Explore here for more details.', 'order': '01', 'category': 'Tree Grid' ,'api':'{"TreeGridComponent":["queryCellInfo","dataSource","enableVirtualization","allowFiltering","allowSorting","allowSelection","selectionSettings","height","columns","dataBound","actionComplete","load"] }',
      'sourceFiles': [{ 'displayName': 'treegrid-overview.tsx', 'path': '/nextjs/demos/src/treegrid/treegrid-overview/page.tsx' }, { 'displayName': 'treegrid-overview.css', 'path': '/nextjs/demos/src/treegrid/treegrid-overview/treegrid-overview.css' }] },
    { 'path': 'treegrid/live-data', 'component': 'LiveStream', 'name': 'Live Data', 'description':'This demo for Essential JS 2 Tree Grid component shows how frequently the Grid cell is updated with real-time data.','order': '01', 'category': 'Tree Grid', 'api':'{"TreeGridComponent":["dataSource","enableVirtualization","enableVirtualMaskRow","enableHover", "columns", "rowHeight", "height", "allowSelection", "queryCellInfo", "load"]}' },
    { 'path': 'treegrid/default', 'component': 'Default', 'name': 'Default Functionalities', 'description':'This example shows how the Syncfusion React Tree Grid component looks with its default configuration.', 'order': '01', 'category': 'Tree Grid' ,'api':'{"TreeGridComponent":["dataSource", "treeColumnIndex", "height", "childMapping", "columns"] }'},
    { 'path': 'treegrid/adaptive', 'component': 'Adaptive', 'name': 'Adaptive Layout ', 'description':'This demo for Essential JS 2 Tree Grid control shows frozen columns feature of Tree Grid with Freeze direction Left/Right.', 'order': '01', 'category': 'Tree Grid' ,'api':'{"TreeGridComponent":["dataSource","childMapping","columns","treeColumnIndex","enableAdaptiveUI","allowFiltering","allowSorting","allowPaging"] }'},
    { 'path': 'treegrid/loading-animation', 'component': 'LoadingAnimation', 'name': 'Loading Animation', 'description':'This demo for Essential JS 2 Tree Grid component shows the loading indicator when Tree Grid loading and refreshing.', 'order': '01', 'category': 'Tree Grid', 'api':'{"TreeGridComponent":["columns", "dataSource","allowSorting","allowPaging", "allowFiltering", "loadingIndicator", "pageSettings"] }'},
  
    { 'path': 'treegrid/localdata', 'component': 'LocalData', 'name': 'Local Data', 'description':'This example shows the binding of an array of list objects in the Syncfusion React Tree Grid component.', 'order': '02', 'category': 'Data Binding' ,'api':'{"TreeGridComponent":["dataSource", "treeColumnIndex", "height", "childMapping", "columns"] }'},
    { 'path': 'treegrid/remote-data', 'component': 'RemoteData', 'name': 'Remote Data', 'description':'This example shows the binding of remote services by using the DataManager in the Syncfusion React Tree Grid.', 'order': '02', 'category': 'Data Binding' ,'api':'{"TreeGridComponent":["dataSource","allowPaging", "columns","treeColumnIndex", "hasChildMapping", "parentIdMapping","idMapping","height"] }'},
    { 'path': 'treegrid/selfreference', 'component': 'SelfReference', 'name': 'Self Reference Data', 'description':'This example illustrates binding self-referential flat data with parent ID to a Syncfusion React Tree Grid component.', 'order': '02', 'category': 'Data Binding' ,'api':'{"TreeGridComponent":["dataSource","allowPaging", "columns","treeColumnIndex","idMapping","parentIdMapping"] }'},

    { 'path': 'treegrid/columntemplate', 'component': 'ColumnTemplate', 'name': 'Column Template', 'description':'This demo explains how to define the template in Tree Grid columns in Syncfusion React Tree Grid component.', 'order': '03', 'category': 'Columns' ,'api':'{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","width","height","columns","rowHeight"] }'},
    { 'path': 'treegrid/header-template', 'component': 'HeaderTemplate', 'name': 'Header Template', 'description':'This demo explains how to customize column headers to show additional HTML elements, such as icons, images, etc. in Syncfusion React Tree Grid component.', 'order': '03', 'category': 'Columns' ,'api':'{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex","allowPaging","columns"] }'},

    { 'path': 'treegrid/drag-anddrop', 'component': 'DragAndDropBetween', 'name': 'Drag and Drop','type':'new', 'description':'This demo for Essential JS 2 trTree Grideegrid control how the rows can be dragged between the Tree Grid using the row drag-and-drop feature.', 'order': '04', 'category': 'Rows' ,'api':'{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","allowPaging","pageSettings","allowRowDragAndDrop"] }'},

    { 'path': 'treegrid/aggregate-default', 'component': 'AggregateRow', 'name': 'Default Aggregate', 'description':'This demo explains how to display the summary values such as average, minimum, etc., for the columns in Syncfusion React Tree Grid component.', 'order': '10', 'category': 'Aggregates' ,'api':'{"TreeGridComponent":["dataSource","childMapping","columns","aggregates", "treeColumnIndex", "toolbar", "toolbarClick", "allowPdfExport", "allowExcelExport"] }'}
];