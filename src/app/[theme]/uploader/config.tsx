export const UploaderSampleOrder:Object = [
    { 'path': 'uploader/default', 'component':'Default', 'description': 'This example demonstrates default functionalities of the React file uploader component, including automatic upload and asynchronous mode options.', 'name': 'Default Functionalities', 'order': '01', 'category': 'File Upload', 'api': '{ "Uploader": ["autoUpload", "asyncSettings", "success", "dropArea"]}', 'sourceFiles': [{ 'displayName': 'default.tsx', 'path': '/nextjs/demos/src/uploader/default/page.tsx' }] },
    { 'path': 'uploader/chunk-upload', 'component':'ChunkUpload', 'description': 'This example demonstrates how to upload files as chunks in the React file upload component, which helps when uploading a large file to a server.', 'name': 'Chunk Upload', 'order': '01', 'category': 'File Upload', 'api': '{ "Uploader": ["autoUpload", "asyncSettings", "dropArea"]}', 'sourceFiles': [{ 'displayName': 'chunk-upload.tsx', 'path': '/nextjs/demos/src/uploader/chunk-upload/page.tsx' }] },
    { 'path': 'uploader/custom-file-list', 'component':'CustomTemplate', 'description': 'This example demonstrates how to customize the file list with buttons using a template and upload a file programmatically using the React file upload.', 'name': 'Template', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "success", "dropArea", "selected", "progress", "failure", "removing" ]}', 'sourceFiles': [{ 'displayName': 'custom-file-list.tsx', 'path': '/nextjs/demos/src/uploader/custom-file-list/page.tsx' }] },
    { 'path': 'uploader/preload-files', 'component':'Preloadfiles', 'description': 'This example demonstrates how to preload files in the React file upload component, which helps users view and manipulate server files.', 'name': 'Preload files', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "success", "dropArea", "files", "failure", "removing" ]}', 'sourceFiles': [{ 'displayName': 'preload-files.tsx', 'path': '/nextjs/demos/src/uploader/preload-files/page.tsx' }] },
    { 'path': 'uploader/file-validation', 'component':'Validation', 'description': 'The example covers validations in React file upload such as allowing/denying file extensions, set min/max file size, duplicate file, and more.', 'name': 'File Validation', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "autoUpload", "minFileSize", "allowedExtensions", "success", "dropArea", "selected" ]}', 'sourceFiles': [{ 'displayName': 'file-validation.tsx', 'path': '/nextjs/demos/src/uploader/file-validation/page.tsx' }] },
    { 'path': 'uploader/image-preview', 'component':'Preview', 'description': 'This example demonstrates how to display a preview of an image file before and after uploading it to a server in React file upload.', 'name': 'Image Preview', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}', 'sourceFiles': [{ 'displayName': 'image-preview.tsx', 'path': '/nextjs/demos/src/uploader/image-preview/page.tsx' }] },
    { 'path': 'uploader/file-upload-with-forms', 'component':'Formsupport', 'description': 'This example demonstrates how to integrate the React file upload control in an HTML form (synchronous mode) and submit a form with selected files.', 'name': 'Form Support', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}', 'sourceFiles': [{ 'displayName': 'file-upload-with-forms.tsx', 'path': '/nextjs/demos/src/uploader/file-upload-with-forms/page.tsx' }] },
    { 'path': 'uploader/custom-drop-area', 'component':'Customdroparea', 'hideOnDevice': true, 'description': 'This example demonstrates how to upload a file using drag and drop and how to configure a custom drop area for the React file upload component.', 'name': 'Custom Drop Area', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}', 'sourceFiles': [{ 'displayName': 'custom-drop-area.tsx', 'path': '/nextjs/demos/src/uploader/custom-drop-area/page.tsx' }] }
]
