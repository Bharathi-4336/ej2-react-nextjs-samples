export const MultiColumnComboboxSampleOrder:Object = [
    { 'path': 'multicolumn-combobox/default', 'component':'Default', 'name': 'Default Functionalities', 'description': 'This example demonstrates the default functionalities of the React multicolumn-combobox component with minimum configuration.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["popupHeight", "popupWidth", "change", "placeholder", "fields", "columns", "value", "text" ]}','sourceFiles' : [{ 'displayName': 'default.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/default/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/remote-databinding', 'component':'Remote', 'name': 'Remote Data', 'description': 'This example demonstrates how to bind with local data source and fetch data from remote data service in the React multicolumn-combobox component.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "query", "popupHeight", "popupWidth", "placeholder"]}','sourceFiles' : [{ 'displayName': 'remote-databinding.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/remote-databinding/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/grouping', 'component':'Group', 'name': 'Grouping', 'description': 'This example demonstrates how to group based on the different categories with individual header using the React multicolumn-combobox component.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "placeholder", "popupHeight", "popupWidth", "groupBy"]}','sourceFiles' : [{ 'displayName': 'grouping.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/grouping/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/filtering', 'component':'Filter', 'name': 'Filtering', 'description': 'This example demonstrates how the filtering functionalities works based on the typed characters in the React multicolumn-combobox component.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "allowFiltering", "filtering", "placeholder", "popupHeight", "popupWidth"]}','sourceFiles' : [{ 'displayName': 'filtering.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/filtering/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/virtualization', 'component':'Virtual', 'name': 'Virtualization', 'description': 'This example demonstrates how to use virtualization support of the React multicolumn-combobox component.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "enableVirtualization", "popupHeight", "placeholder", "popupWidth"]}','sourceFiles' : [{ 'displayName': 'virtualization.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/virtualization/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/sorting', 'component':'Sort', 'name': 'Sorting', 'description': 'This example shows how to use the sorting support of the React multicolumn-combobox component, enhancing data organization and accessibility.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "allowFiltering", "popupHeight", "placeholder", "sortOrder", "popupWidth"]}','sourceFiles' : [{ 'displayName': 'sorting.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/sorting/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/rtl', 'component':'RTL', 'name': 'RTL', 'description': 'This example shows how to use RTL support in the React multicolumn-combobox component, ensuring proper layout and functionality for right-to-left languages.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "enableRtl", "popupHeight", "placeholder", "popupWidth"]}','sourceFiles' : [{ 'displayName': 'rtl.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/rtl/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/keyboard-navigation', 'component':'Keyboard', 'name': 'Keyboard Navigation', 'description': 'This example demonstrates how to use Keyboard navigation support of the React multicolumn-combobox component.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "popupWidth", "popupHeight", "placeholder"]}','sourceFiles' : [{ 'displayName': 'keyboard-navigation.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/keyboard-navigation/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] },
    { 'path': 'multicolumn-combobox/template', 'component':'Template', 'name': 'Template', 'description': 'This example shows how to use Template support in the React multicolumn-combobox component, enabling custom layouts and content within the dropdown.', 'order': '01', 'category': 'MultiColumn Combobox', 'api': '{"MultiColumn Combobox": ["dataSource", "fields", "template", "headerTemplate", "popupHeight", "placeholder", "popupHeight"]}','sourceFiles' : [{ 'displayName': 'template.tsx', 'path':'/nextjs/demos/src/multicolumn-combobox/template/page.tsx' },{ 'displayName': 'dataSource.json', 'path':'/nextjs/demos/src/multicolumn-combobox/dataSource.json'}] }
]